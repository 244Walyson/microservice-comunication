#spring.jpa.properties.jakarta.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;


server.port=${PORT:8081}
spring.application.name=product-API

spring.main.allow-bean-definition-overriding: true

app-config.secrets.api-secret=${API_SECRET:ZXNzYWVtaW5oYWNoYXZlZGVhcGljb21lbmNvZGU2NA==}

spring.jpa.open-in-view=false

spring.datasource.url=jdbc:postgresql://localhost:5433/product-db
spring.datasource.username=admin
spring.datasource.password=1234567

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=none
spring.datasource.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.rabbitmq.host=${RABBIT_MQ_HOST:localhost}
spring.rabbitmq.port=${RABBIT_MQ_PORT:5672}
spring.rabbitmq.username=${RABBIT_MQ_USERNAME:guest}
spring.rabbitmq.password=${RABBIT_MQ_PASSWORD:guest}

app-config.rabbit.exchange.product=product.topic
app-config.rabbit.routingKey.product-stock=product-stock-update.routingKey
app-config.rabbit.routingKey.sales-confirmation=sales-confirmation.routingKey
app-config.rabbit.queue.product-stock=product-stock-update.queue
app-config.rabbit.queue.sales-confirmation=sales-confirmation.queue

app-config.services.sales=http://${SALES_HOST:localhost}:${SALES_PORT:8082}